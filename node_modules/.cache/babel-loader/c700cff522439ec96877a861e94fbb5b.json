{"ast":null,"code":"var _jsxFileName = \"/Users/sylvia/Desktop/Weather-React-App/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchWeather(props) {\n  _s();\n\n  let [city, setCity] = useState(\"\");\n  let [weather, setWeather] = useState(\"\");\n  let [temperature, setTemperature] = useState(null);\n  let [loading, setLoading] = useState(false);\n\n  function displayWeather(response) {\n    setLoading(true);\n    setWeather({\n      temperature: response.data.current.temp,\n      wind: response.data.current.wind_speed,\n      humidity: response.data.current.humidity,\n      description: response.data.current.weather[0].description,\n      icon: `http://openweathermap.org/img/wn/${response.data.current.weather[0].icon}@2x.png`\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let apiUrl = `https://api.neurocode.ai/v1/weather?city=${city}`;\n    axios.get(apiUrl).then(displayWeather).catch(err => console.error(err));\n  }\n\n  function changeCity(event) {\n    setCity(event.target.value);\n  }\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Type a city..\",\n      onChange: changeCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"Submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [form, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature: \", Math.round(weather.temperature), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Description: \", weather.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Wind: \", weather.wind, \"km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Humidity:\", weather.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.icon,\n            alt: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } else {\n    return form;\n  }\n}\n\n_s(SearchWeather, \"HBMKYwYKSMkW+rlVxvYA7xjLfg0=\");\n\n_c = SearchWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchWeather\");","map":{"version":3,"sources":["/Users/sylvia/Desktop/Weather-React-App/src/Weather.js"],"names":["React","useState","axios","SearchWeather","props","city","setCity","weather","setWeather","temperature","setTemperature","loading","setLoading","displayWeather","response","data","current","temp","wind","wind_speed","humidity","description","icon","handleSubmit","event","preventDefault","apiUrl","get","then","catch","err","console","error","changeCity","target","value","form","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function SearchWeather(props) {\n  let [city, setCity] = useState(\"\");\n  let [weather, setWeather] = useState(\"\");\n  let [temperature, setTemperature] = useState(null);\n  let [loading, setLoading] = useState(false);\n\n  function displayWeather(response) {\n    setLoading(true);\n    setWeather({\n      temperature: response.data.current.temp,\n      wind: response.data.current.wind_speed,\n      humidity: response.data.current.humidity,\n      description: response.data.current.weather[0].description,\n      icon: `http://openweathermap.org/img/wn/${response.data.current.weather[0].icon}@2x.png`\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let apiUrl = `https://api.neurocode.ai/v1/weather?city=${city}`;\n    axios\n      .get(apiUrl)\n      .then(displayWeather)\n      .catch((err) => console.error(err));\n  }\n\n  function changeCity(event) {\n    setCity(event.target.value);\n  }\n\n  let form = (\n    <form onSubmit={handleSubmit}>\n      <input type=\"search\" placeholder=\"Type a city..\" onChange={changeCity} />\n      <button type=\"Submit\">Search</button>\n    </form>\n  );\n\n  if (loading) {\n    return (\n      <div>\n        {form}\n        <ul>\n          <li>Temperature: {Math.round(weather.temperature)}Â°C</li>\n          <li>Description: {weather.description}</li>\n          <li>Wind: {weather.wind}km/h</li>\n          <li>Humidity:{weather.humidity}%</li>\n          <li>\n            <img src={weather.icon} alt={weather.description} />\n          </li>\n        </ul>\n      </div>\n    );\n  } else {\n    return form;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}